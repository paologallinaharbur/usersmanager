// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// UserData user data
//
// swagger:model userData
type UserData struct {

	// country
	Country string `json:"country,omitempty"`

	// email
	Email string `json:"email,omitempty"`

	// firstName
	FirstName string `json:"firstName,omitempty"`

	// nickName
	// Required: true
	NickName *string `json:"nickName"`

	// password
	Password string `json:"password,omitempty"`

	// secondName
	SecondName string `json:"secondName,omitempty"`
}

// Validate validates this user data
func (m *UserData) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateNickName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *UserData) validateNickName(formats strfmt.Registry) error {

	if err := validate.Required("nickName", "body", m.NickName); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *UserData) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *UserData) UnmarshalBinary(b []byte) error {
	var res UserData
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
